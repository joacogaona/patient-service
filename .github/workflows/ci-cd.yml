name: CI/CD Pipeline

on:
  push:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10
        ports:
          - 3307:3306

      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install

      - name: Run unit tests
        run: yarn test

      - name: Build Docker Compose
        run: docker-compose -f docker-compose.github-actions.yml up --build -d
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          EMAIL_SMTP_HOST: ${{ secrets.EMAIL_SMTP_HOST }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          NODEMAILER_HOST: ${{ secrets.NODEMAILER_HOST }}
          NODEMAILER_PORT: ${{ secrets.NODEMAILER_PORT }}
          NODEMAILER_USER: ${{ secrets.NODEMAILER_USER }}
          NODEMAILER_PASS: ${{ secrets.NODEMAILER_PASS }}
          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}

      - name: Tear down Docker Compose
        run: docker-compose -f docker-compose.github-actions.yml down
